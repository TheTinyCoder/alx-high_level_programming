The ``101-lazy_matrix_mul`` module
==================================

Using ``lazy_matrix_mul``
-------------------------

Importing:

	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Testing:

	>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
	[[ 7 10]
	 [15 22]]
	
	>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
	[[13 16]]

	>>> print(lazy_matrix_mul([[1.1, 1.1]], [[1.1, 1.1], [1.1, 1.1]]))
	[[2.42 2.42]]
	
	>>> print(lazy_matrix_mul(1, [[3, 4], [5, 6]]))
	[[3 4]
	 [5 6]]

	>>> lazy_matrix_mul(None, None)
	Traceback (most recent call last):
	...
	TypeError: Object arrays are not currently supported

	>>> matrix_mul([[7, 12]], None)
	Traceback (most recent call last):
	...
	TypeError: Object arrays are not currently supported	
	
	>>> print(lazy_matrix_mul([1], (2, 3)))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,) and (2,) not aligned: 1 (dim 0) != 2 (dim 0)

	>>> print(lazy_matrix_mul([1], [[3, 4], [5, 6]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,) and (2,2) not aligned: 1 (dim 0) != 2 (dim 0)

	>>> print(lazy_matrix_mul([[3, 4], [5, 6]], [2]))
	Traceback (most recent call last):
	...
	ValueError: shapes (2,2) and (1,) not aligned: 2 (dim 1) != 1 (dim 0)

	>>> print(lazy_matrix_mul([], []))
	0.0
	
	>>> print(lazy_matrix_mul([1], [[3, 4], [5, 6]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,) and (2,2) not aligned: 1 (dim 0) != 2 (dim 0)

	>>> print(lazy_matrix_mul([[]], [[]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,0) and (1,0) not aligned: 0 (dim 1) != 1 (dim 0)


	>>> print(lazy_matrix_mul([[1, 2]], []))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

	>>> print(lazy_matrix_mul([[1, 2]], [[]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

	>>> print(lazy_matrix_mul("Alx", [[3, 4], [5, 6]]))
	Traceback (most recent call last):
	...
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> print(lazy_matrix_mul([[3, 4], [5, 6]], "Alx"))
	Traceback (most recent call last):
	...
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> print(lazy_matrix_mul([[1, "2"]], [[3, 4], [5, 6]]))
	Traceback (most recent call last):
	...
	TypeError: invalid data type for einsum

	>>> print(lazy_matrix_mul([[5, "6"], [7, 8]], [[5, 6], [7, 8]]))
	Traceback (most recent call last):
	...
	TypeError: invalid data type for einsum
	
	>>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[5, "6"], [7, 8]]))
	Traceback (most recent call last):
	...
	TypeError: invalid data type for einsum

	>>> print(lazy_matrix_mul([[1, 2], [3]], [[3, 4], [5, 6]]))
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

	>>> print(lazy_matrix_mul([[1, 2]], [[4], [5, 6]]))
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

	>>> print(lazy_matrix_mul([[1, 2, 3]], [[3, 4], [5, 6]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)


	>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6], [7, 8]]))
	Traceback (most recent call last):
	...
	ValueError: shapes (1,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

	
Case missing arguments:

	>>> print(lazy_matrix_mul([[1, 2]]))
	Traceback (most recent call last):
	...
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
	
	>>> print(lazy_matrix_mul())
	Traceback (most recent call last):
	...
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'



